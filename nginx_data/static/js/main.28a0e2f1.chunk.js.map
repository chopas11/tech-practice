{"version":3,"sources":["components/UI/MyModal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/input/MyInput.module.css","components/UI/button/MyButton.jsx","components/PostItem.jsx","components/PostList.jsx","components/UI/input/MyInput.jsx","components/PostForm.jsx","components/UI/select/MySelect.jsx","components/PostFilter.jsx","components/UI/MyModal/MyModal.jsx","hooks/usePosts.js","App.js","index.js"],"names":["module","exports","MyButton","children","props","className","classes","myBtn","PostItem","number","post","title","body","onClick","remove","PostList","posts","length","TransitionGroup","map","index","CSSTransition","timeout","classNames","id","MyInput","React","forwardRef","ref","myInput","PostForm","create","useState","setPost","type","placeholder","value","onChange","e","target","preventDefault","newPost","Date","now","MySelect","options","defaultValue","event","disabled","option","name","PostFilter","filter","setFilter","query","selectedSort","sort","MyModal","visible","setVisible","rootClasses","myModal","push","active","join","myModalContent","stopPropagation","usePosts","sortedPosts","useMemo","a","b","localeCompare","useSortedPosts","toLowerCase","includes","App","setPosts","modal","setModal","sortedAndSearchedPosts","axios","get","response","data","fetchPosts","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28a0e2f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__3wunW\",\"myModalContent\":\"MyModal_myModalContent__3NJ2c\",\"active\":\"MyModal_active__2TUBd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__1rqi-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__1bS5J\"};","import React from 'react';\nimport classes from './MyButton.module.css';\n\nconst MyButton = function ({ children, ...props }) {\n  return (\n    <button {...props} className={classes.myBtn}>\n      {children}\n    </button>\n  );\n};\n\nexport default MyButton;\n","import React from 'react';\n\nimport MyButton from './UI/button/MyButton';\n\nconst PostItem = function (props) {\n  // console.log(props);\n  return (\n    <div className=\"post\">\n      <div className=\"post-content\">\n        <strong>\n          {props.number}. {props.post.title}\n        </strong>\n        <p>{props.post.body}</p>\n      </div>\n      <div className=\"post-btns\">\n        <MyButton onClick={() => props.remove(props.post)}>Удалить</MyButton>\n      </div>\n    </div>\n  );\n};\n\nexport default PostItem;\n","import React from 'react';\nimport PostItem from './PostItem';\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\n\nconst PostList = function ({ posts, title, remove }) {\n  if (!posts.length) {\n    return <h1> Посты не найдены</h1>;\n  }\n\n  return (\n    <div>\n      <h1>{title}</h1>\n      <TransitionGroup>\n        {posts.map((post, index) => (\n            <CSSTransition\n                key={post.id}\n                timeout={500}\n                classNames=\"post\"\n            >\n            <PostItem\n                remove={remove}\n                number={index + 1}\n                post={post}\n\n            />\n            </CSSTransition>\n        ))}\n      </TransitionGroup>\n\n    </div>\n  );\n};\n\nexport default PostList;\n","import React from 'react';\nimport classes from './MyInput.module.css';\n\nconst MyInput = React.forwardRef((props, ref) => {\n  return <input ref={ref} className={classes.myInput} {...props} />;\n});\n\nexport default MyInput;\n","import React, { useState } from 'react';\n\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\n\nconst PostForm = function ({ create }) {\n  const [post, setPost] = useState({ title: '', body: '' });\n\n  // onClick Event function\n  const addNewPost = function (e) {\n    e.preventDefault();\n    // Create new object for Post\n    const newPost = {\n      ...post,\n      id: Date.now(),\n    };\n    // Use Callback Function to modify Posts Array\n    create(newPost);\n    // Clean input text in form\n    setPost({ title: '', body: '' });\n  };\n\n  return (\n    <div>\n      <form>\n        {/* Управляемый компонент */}\n        <MyInput\n          type=\"text\"\n          placeholder=\"Название\"\n          value={post.title}\n          onChange={(e) => {\n            setPost({ ...post, title: e.target.value });\n          }}\n        />\n        <MyInput\n          type=\"text\"\n          placeholder=\"Описание\"\n          value={post.body}\n          onChange={(e) => {\n            setPost({ ...post, body: e.target.value });\n          }}\n        />\n        {/* <input ref={bodyInputRef} type=\"text\" /> */}\n        {/* Неуправляемый компонент */}\n        {/* <MyInput ref={bodyInputRef} type=\"text\" placeholder=\"описание\" /> */}\n        <MyButton onClick={addNewPost}>Создать</MyButton>\n      </form>\n    </div>\n  );\n};\n\nexport default PostForm;\n","import React from 'react';\n\nconst MySelect = ({ options, defaultValue, value, onChange }) => {\n  return (\n    <select value={value} onChange={(event) => onChange(event.target.value)}>\n      <option disabled value=\"\">\n        {defaultValue}\n      </option>\n      {options.map((option) => (\n        <option key={option.value} value={option.value}>\n          {option.name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default MySelect;\n","import React from 'react';\n\nimport MySelect from './UI/select/MySelect';\nimport MyInput from './UI/input/MyInput';\n\nconst PostFilter = ({ filter, setFilter }) => {\n  return (\n    <div>\n      <MyInput\n        value={filter.query}\n        onChange={(e) => setFilter({ ...filter, query: e.target.value })}\n        placeholder=\"Поиск\"\n      />\n      <MySelect\n        value={filter.query}\n        onChange={(selectedSort) =>\n          setFilter({ ...filter, sort: selectedSort })\n        }\n        defaultValue=\"Соритровка\"\n        options={[\n          { value: 'title', name: 'По названию' },\n          { value: 'body', name: 'По описанию' },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default PostFilter;\n","import React from 'react';\nimport classes from './MyModal.module.css';\n\nconst MyModal = ({ children, visible, setVisible }) => {\n  const rootClasses = [classes.myModal];\n  if (visible) {\n    rootClasses.push(classes.active);\n  }\n\n  return (\n    <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\n      <div\n        className={classes.myModalContent}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default MyModal;\n","import {useMemo} from \"react\";\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n    const sortedPosts = useMemo(() => {\r\n        if (sort) {\r\n            return [...posts].sort((a, b) =>\r\n                a[sort].localeCompare(b[sort])\r\n            );\r\n        }\r\n        return posts;\r\n    }, [sort, posts]);\r\n\r\n    return sortedPosts;\r\n}\r\n\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n    const sortedPosts = useSortedPosts(posts, sort);\r\n    const sortedAndSearchedPosts = useMemo(() => {\r\n        return sortedPosts.filter((post) =>\r\n            post.title.toLowerCase().includes(query)\r\n        );\r\n    }, [query, sortedPosts]);\r\n\r\n    return sortedAndSearchedPosts;\r\n\r\n}","import React, { useMemo, useState } from 'react';\n\n// Import CSS\nimport './styles/App.css';\n\n// Import Components\nimport PostList from './components/PostList';\nimport PostForm from './components/PostForm';\nimport PostFilter from './components/PostFilter';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport MyButton from './components/UI/button/MyButton';\nimport {usePosts} from \"./hooks/usePosts\";\nimport axios from \"axios\";\n\nfunction App() {\n\n  const [posts, setPosts] = useState([]);\n\n  const [filter, setFilter] = useState({ sort: '', query: '' });\n  const [modal, setModal] = useState(false);\n  //External Hook to Sort anf filter\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\n\n  // Callback function to modify posts array\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n   async function fetchPosts() {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/posts')\n       setPosts(response.data)\n    }\n\n  // Callback function to remove post from array\n  const removePost = (post) => {\n    setPosts(posts.filter((p) => p.id !== post.id));\n  };\n\n  return (\n    <div className=\"App\">\n        <MyButton  onClick={() => fetchPosts()}>Загрузить с Fake API</MyButton>\n      <MyButton onClick={() => setModal(true)}>Создать</MyButton>\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost} />\n      </MyModal>\n\n      <PostFilter filter={filter} setFilter={setFilter} />\n\n      <PostList\n        remove={removePost}\n        posts={sortedAndSearchedPosts}\n        title=\"Список\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}